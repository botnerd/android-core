
File ossrhProp = project.rootProject.file('ossrh.properties')
if (ossrhProp.exists()) {
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    Properties p = new Properties()
    p.load(new FileInputStream(ossrhProp))
    p.each { name, value ->
        ext[name] = value
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.source
    }

    artifacts {
        archives androidSourcesJar
    }

    publishing {
        publications {
            release(MavenPublication) {
                // The coordinates of the library, being set from variables that
                // we'll set up in a moment
                groupId publishGroupId
                artifactId publishArtifactId
                version libraryVersion

                // Two artifacts, the `aar` and the sources
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
                artifact androidSourcesJar

                // Self-explanatory metadata for the most part
                pom {
                    name = publishArtifactId
                    description = libraryDescription
                    // If your project has a dedicated site, use its URL here
                    url = siteUrl
                    licenses {
                        license {
                            name = licenseName
                            url = licenseUrl
                        }
                    }
                    developers {
                        developer {
                            id = developerId
                            name = developerName
                            email = developerEmail
                        }
                    }
                    // Version control info, if you're using GitHub, follow the format as seen here
                    scm {
                        connection = scmConnection
                        developerConnection = scmDeveloperConnection
                        url = scmUrl
                    }
                    // A slightly hacky fix so that your POM will include any transitive dependencies
                    // that your library builds upon
                    withXml {
                        def dependenciesNode = asNode().appendNode('dependencies')

                        project.configurations.implementation.allDependencies.each {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
    signing {
        sign publishing.publications
    }


}
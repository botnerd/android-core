apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

// Build config types set by the variants
final String CONFIG_TYPE_BOOLEAN = 'boolean'
//noinspection GroovyUnusedAssignment
final String CONFIG_TYPE_INT = 'int'
//noinspection GroovyUnusedAssignment
final String CONFIG_TYPE_LONG = 'long'
//noinspection GroovyUnusedAssignment
final String CONFIG_TYPE_STRING = 'String'

// Build config fields set by the variants
//noinspection GroovyUnusedAssignment
final String CONFIG_LOGGING_ENABLED = 'LOGGING_ENABLED'

group "$rootProject.ext.coreGroupId"
version = "$rootProject.ext.coreVersion"

ext {
    artifact = project.name
    libraryDescription = 'UI Module'

    bintrayRepo = "$rootProject.ext.binTrayRepo"
    bintrayName = "$rootProject.ext.binTrayName"
    publishedGroupId = "$rootProject.ext.coreGroupId"
    libraryName = "$rootProject.ext.libraryName"

    libraryVersion = "$rootProject.ext.coreVersion"

    siteUrl = "$rootProject.ext.siteUrl"
    gitUrl = "$rootProject.ext.gitUrl"

    developerId = "$rootProject.ext.developerId"
    developerName = "$rootProject.ext.developerName"
    developerEmail = "$rootProject.ext.developerEmail"

    licenseName = "$rootProject.ext.licenseName"
    licenseUrl = "$rootProject.ext.licenseUrl"
    allLicenses = "$rootProject.ext.allLicenses"

}

android {
    compileSdkVersion sdkCompileVersion
    buildToolsVersion buildTools
    defaultConfig {
        minSdkVersion sdkMinVersion
        targetSdkVersion sdkTargetVersion
        versionCode 1
        versionName version

        consumerProguardFiles 'proguard-rules.pro'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug {
            debuggable true
            buildConfigField CONFIG_TYPE_BOOLEAN, CONFIG_LOGGING_ENABLED, true.toString()
        }
        release {
            buildConfigField CONFIG_TYPE_BOOLEAN, CONFIG_LOGGING_ENABLED, false.toString()
        }
    }

    dataBinding {
        enabled = true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        warningsAsErrors true
        abortOnError false
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion", {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    })

    // Support Libraries
    implementation "androidx.recyclerview:recyclerview:$rootProject.ext.recyclerLibVersion"
    implementation "com.google.android.material:material:$rootProject.ext.materialLibVersion"

    // Chrome Custom Tabs
    implementation "androidx.browser:browser:$rootProject.ext.browserLibVersion"

    // Image Loading
    implementation "com.facebook.fresco:fresco:$rootProject.ext.frescoVersion"
    implementation "com.facebook.fresco:animated-gif:$rootProject.ext.frescoVersion"

    // Timber logging util
    implementation "com.jakewharton.timber:timber:$rootProject.ext.timberVersion"

    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.androidTestVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.ext.kotlinVersion"
}

configurations.all() {
    resolutionStrategy.force "androidx.media:media:$rootProject.ext.mediaLibVersion"
    resolutionStrategy.force "androidx.legacy:legacy-support-v4:$rootProject.ext.legacySupportLibVersion"
}

//Add these lines to publish library to bintray. This is the readymade scripts made by github user nuuneoi to make uploading to bintray easy.
//Place it at the end of the file
if (project.rootProject.file('local.properties').exists()) {
    apply from: 'https://raw.githubusercontent.com/wajahatkarim3/JCenter-Gradle-Scripts/master/install.gradle'
    apply from: 'https://raw.githubusercontent.com/wajahatkarim3/JCenter-Gradle-Scripts/master/bintray.gradle'
}

